<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>AcademicTracking</groupId>
  <artifactId>AcademicTracking</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <build>
    <sourceDirectory>src</sourceDirectory>

    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
            <fork>true</fork>
      		<executable>C:\Program Files\Java\jdk1.8.0_181\bin\javac.exe</executable>
        	<source>1.8</source>
        	<target>1.8</target>
        </configuration>
      </plugin>
      <!-- The Surefire Plugin is used during the test phase of the build lifecycle to execute 
	the unit tests of an application.It generates reports in two different file formats: 
	1.XML files
	2.Plain Text files -->
	   <!-- <plugin>
	   		<groupId>org.apache.maven.plugins</groupId>
	    	<artifactId>maven-surefire-plugin</artifactId>
	    	<version>2.18.1</version>
	    		<configuration>
	    		    <forkCount>8</forkCount>
	                <reuseForks>true</reuseForks>
	                <threadCount>5</threadCount>
	                <parallel>classes</parallel>
	                <skipTests>true</skipTests>
	    			<includes>
	                <include>**/Parallel*IT.java</include>	   		
	    			</includes>
	    		</configuration>
	  </plugin> -->
	  <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
         <execution>
             <id>acceptance-test</id>
             <phase>integration-test</phase>
             <goals>
                 <goal>integration-test</goal>
             </goals>
	      </execution>
	        </executions>
	        <configuration>
			    <!-- <forkCount>2</forkCount>
			    <reuseForks>true</reuseForks> -->
			    <useUnlimitedThreads>true</useUnlimitedThreads>
<!-- 			    <threadCount>18</threadCount> -->
                <parallel>classes</parallel>
    			<includes>
                <include>**/Parallel*IT.class</include>	   		
    			</includes>
		    </configuration>
		</plugin>
	  <!-- <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-surefire-report-plugin</artifactId>
	        <version>3.0.0-M3</version>
	  </plugin> -->
	<!-- ******************maven cucumber HTML reporting plugin *************************** -->
	  <plugin>
		<groupId>net.masterthought</groupId>
	    <artifactId>maven-cucumber-reporting</artifactId>
	    <version>3.16.0</version>
	        <executions>
	          <execution>
	            <id>execution</id>
	            <phase>verify</phase>
	            <goals>
	              <goal>generate</goal>
	            </goals>
	            <configuration>
	              <projectName>AcademicTracking</projectName>
	              <outputDirectory>${project.build.directory}/reports/cucumber-reports/</outputDirectory>
	              <cucumberOutput>target/cucumber-parallel/json</cucumberOutput>
	              <skippedFails>true</skippedFails>
	              <enableFlashCharts>false</enableFlashCharts>
	              <buildNumber>42</buildNumber>
	            </configuration>
	          </execution>
	        </executions>
	      </plugin>
<!-- **************************************************************************************** -->     
<!--  **https://mvnrepository.com/artifact/com.github.temyers/cucumber-jvm-parallel-plugin ** -->
     <plugin>
		  <groupId>com.github.temyers</groupId>
		  <artifactId>cucumber-jvm-parallel-plugin</artifactId>
		  <version>5.0.0</version>
		  <executions>
		    <execution>
		      <id>generateRunners</id>
		      <phase>generate-test-sources</phase>
		      <goals>
		        <goal>generateRunners</goal>
		      </goals>
		      <configuration>
		        <!-- Mandatory -->
		        <!-- List of package names to scan for glue code. -->
		        <glue>
		          <package>CucumberA4.Part3.CucumberA4P3.classes</package>
		        </glue>
		        <!-- These are optional, with the default values -->
		        <!-- Where to output the generated tests -->
		        <outputDirectory>src/CucumberA4/Part3/CucumberA4P3/generators/</outputDirectory>
		        <!-- The directory, which must be in the root of the runtime classpath, containing your feature files.  -->
		        <featuresDirectory>src/CucumberA4/Part3/CucumberA4P3/features/</featuresDirectory>
		        <!-- Directory where the cucumber report files shall be written  -->
<!-- 	        		<cucumberOutputDir>target/cucumber-parallel/</cucumberOutputDir>  -->
		        		<cucumberOutputDir>target</cucumberOutputDir>
		        
<!-- 		        List of cucumber plugins. When none are provided the json formatter is used. For more --> 
<!-- 		             advanced usage see section about configuring cucumber plugins --> 
 		        <plugins> 
	          <plugin> 
 		              <name>json</name>
 		              <extension>json</extension>
       				 <!--Optional output directory. Overrides cucumberOutputDirectory. Usefull when different plugins create files with the same extension-->
        				<outputDirectory>${project.build.directory}/cucumber-parallel/json</outputDirectory>
		          </plugin>
<!-- 		          <plugin> -->
<!-- 		              <name>com.example.CustomHtmlFormatter</name>  -->
<!--  		              <extension>html</extension>  -->
<!--  		          </plugin>  -->
		        </plugins>
		        <strict>true</strict>
				<monochrome>true</monochrome>
				 <useTestNG>false</useTestNG>
<!-- 				The naming scheme to use for the generated test classes.  One of ['simple', 'feature-title', 'pattern'] -->
<!--         		<namingScheme>simple</namingScheme> -->
<!--         		The class naming pattern to use.  Only required/used if naming scheme is 'pattern'. -->
<!--         		<namingPattern>Parallel{c}IT</namingPattern> -->
<!-- 		        One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. -->
		        <parallelScheme>SCENARIO</parallelScheme>
		        <!-- Specify a custom template for the generated sources (this is a path relative to the project base directory) -->
<!-- 		        <customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate> -->
<!-- 		        Specify a custom package name for generated sources. Default is no package. -->
		        <packageName>test.java.cucumberParallelScenario.generatedTest</packageName> 
		      </configuration>
		    </execution>
		  </executions>
		</plugin> 
    </plugins>

  </build>
  <dependencies>
  	<dependency>
  		<groupId>junit</groupId>
  		<artifactId>junit</artifactId>
  		<version>4.12</version>
  	</dependency>
  <!-- 	<dependency>
  		<groupId>info.cukes</groupId>
  		<artifactId>cucumber-java</artifactId>
  		<version>1.2.5</version>
  	</dependency>
  	<dependency>
  		<groupId>info.cukes</groupId>
  		<artifactId>cucumber-junit</artifactId>
  		<version>1.2.5</version>
  	</dependency>
  	<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-jvm</artifactId>
			<version>1.2.5</version>
			<type>pom</type>
	</dependency>
	
	 Cucumber Gherkin SYNTAX
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>gherkin</artifactId>
			<version>2.12.2</version>
		</dependency>  -->
		
<!-- 		https://mvnrepository.com/artifact/io.cucumber/cucumber-jvm  -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-jvm</artifactId>
		    <version>4.2.0</version>
		    <type>pom</type>
		</dependency>
<!-- 		https://mvnrepository.com/artifact/io.cucumber/gherkin -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>gherkin</artifactId>
		    <version>5.1.0</version>
		</dependency>
<!-- 		https://mvnrepository.com/artifact/io.cucumber/cucumber-core -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-core</artifactId>
		    <version>4.2.0</version>
		</dependency>
<!-- 		https://mvnrepository.com/artifact/io.cucumber/cucumber-java -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-java</artifactId>
		    <version>4.2.0</version>
		</dependency>
<!-- 		https://mvnrepository.com/artifact/io.cucumber/cucumber-junit -->
		<dependency>
		    <groupId>io.cucumber</groupId>
		    <artifactId>cucumber-junit</artifactId>
		    <version>4.2.0</version>
		</dependency>

	<!-- 2nd is for Cucumber pretty and Json format Reporting -->
		<dependency>
   			 <groupId>net.masterthought</groupId>
    		 <artifactId>cucumber-reporting</artifactId>
   			 <version>3.5.1</version>
		</dependency>
	<!-- https://mvnrepository.com/artifact/log4j/log4j -->
		<dependency>
		    <groupId>log4j</groupId>
		    <artifactId>log4j</artifactId>
		    <version>1.2.8</version>
		</dependency>	
  </dependencies>
</project>